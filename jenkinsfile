pipeline {
    agent {
        label 'jenkins-agent'
    }

    parameters {
        string(name: 'REPO_URL', description: 'GitHub Repository URL', trim: true)
        string(name: 'BRANCH', description: 'GitHub Branch to Deploy', defaultValue: 'master', trim: true)
        string(name: 'AZURE_VM_USERNAME', description: 'Azure VM Username', defaultValue: 'azureuser', trim: true)
        string(name: 'AZURE_VM_IP', description: 'Azure VM IP Address', trim: true)
    }

    environment {
        GITHUB_URL = "${params.REPO_URL}"
        BRANCH = "${params.BRANCH}"
        AZURE_VM_USERNAME = "${params.AZURE_VM_USERNAME}"
        AZURE_VM_IP = "${params.AZURE_VM_IP}"
    }

    stages {
        stage('Deploy and Run Application on Azure VM') {
            steps {
                sshagent(['nodemongo-app']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ${AZURE_VM_USERNAME}@${AZURE_VM_IP} "
                            if [ ! -d \$(basename ${GITHUB_URL} .git) ]; then
                                echo 'Cloning repository...'
                                git clone ${GITHUB_URL}
                            else
                                echo 'Directory \$(basename ${GITHUB_URL} .git) already exists, skipping git clone.'
                            fi
                            
                            echo 'Checking out branch ${BRANCH}...'
                            cd \$(basename ${GITHUB_URL} .git)
                            git checkout ${BRANCH}
                            
                            echo 'Updating system packages...'
                            sudo apt update
                            sudo apt upgrade -y

                            echo 'Installing dependencies...'
                            npm install -y

                            echo 'Starting the application...'
                            npm run prodStart
                        "
                    """
                }
                echo 'Application deployed and running on Azure VM'
            }
        }
    }
}
